name: Action Test Deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AUTHOR: naxa
  AWS_REGION: ap-south-1
  PROJECT_NAME: gh-action-test
  S3_BUCKET_NAME: naxa-ci-artifacts

jobs:
  build:
    name: Build Static Files
    runs-on: self-hosted
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Use Node.js 19.x
        uses: actions/setup-node@v4
        with:
          node-version: 19.x

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Write Environment Variables
        id: write_env
        run: |
          case "${{ github.ref }}" in
          refs/heads/master)
          echo '
          # Write Production Environments
          SITE_NAME="Starter Kit -v3 (Ts)"
          BASE_URL=https://admin.naxa.com.np
          API_URL_V1=https://admin.naxa.com.np/api/v1
          ' > .env
          ;;
          esac

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn

      - name: Generate build
        run: |
          yarn build

      - name: Upload Build Artifact to S3
        uses: anilrajrimal1/s3-build-artifact-uploader@v2.0.2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          s3_bucket_name: ${{ env.S3_BUCKET_NAME }}
          project_name: ${{ env.PROJECT_NAME }}
          zip_name: ${{ github.ref_name }}-${{ github.run_id }}-${{ github.run_number }}.zip

  deploy:
    name: Deploy Static Files
    needs:
      - build
    runs-on: self-hosted
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Download Build Artifact from S3
        uses: anilrajrimal1/s3-build-artifact-downloader@v2.0.2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          s3_bucket_name: ${{ env.S3_BUCKET_NAME }}
          project_name: ${{ env.PROJECT_NAME }}
          zip_name: ${{ github.ref_name }}-${{ github.run_id }}-${{ github.run_number }}.zip

      - name: Get VM SSH host and user
        id: get_vm_conf
        run: |
          case "${{ github.ref }}" in
          refs/heads/master)
              export SERVER_IP=159.89.164.123
              export SERVER_USERNAME=devops
              export PROJECT_PATH=/srv/Projects/gh-actions-test/dist
          esac
          echo "SERVER_IP=${SERVER_IP}" >> $GITHUB_OUTPUT
          echo "SERVER_USERNAME=${SERVER_USERNAME}" >> $GITHUB_OUTPUT
          echo "PROJECT_PATH=${PROJECT_PATH}" >> $GITHUB_OUTPUT

      - name: Copy build file using appleboy-scp
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.get_vm_conf.outputs.SERVER_IP }}
          username: ${{ steps.get_vm_conf.outputs.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          overwrite: true
          source: './dist/*'
          target: ${{ steps.get_vm_conf.outputs.PROJECT_PATH }}
